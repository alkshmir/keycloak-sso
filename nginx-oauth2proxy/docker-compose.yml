version: "3"

services:
  #nginx:
  #  image: nginx:latest
  #  ports:
  #    - 2080:80
  #  environment:
  #    - NGINX_PORT=80
  #    - LB_PORT=2080
  #  volumes:
  #    - ./default.conf.template:/etc/nginx/templates/default.conf.template
  #  networks:
  #    - frontend
  #    - backend

  oauth2proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    ports:
      - 8000:4180
    environment:
      OAUTH2_PROXY_PROVIDER: keycloak-oidc
      OAUTH2_PROXY_CLIENT_ID: oauth2proxy-demo
      OAUTH2_PROXY_CLIENT_SECRET: DI0nvTZRrXUEb7ssC9pJwt0IBXx2x03y # TODO: update client secret
      OAUTH2_PROXY_REDIRECT_URL: http://localhost:8000
      OAUTH2_PROXY_OIDC_ISSUER_URL: http://keycloak:8080/auth/realms/demo-realm
      OAUTH2_PROXY_INSECURE_OIDC_SKIP_ISSUER_VERIFICATION: true # allow oidc issuer domain name difference between internal nw and external nw
      OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL: true # disable email verification (test purpose only)
      OAUTH2_PROXY_COOKIE_SECRET: 8uP-FjseV968ZLlivqZzkzAjZZ-TS0Cg_kBbyk9PxCU=
      OAUTH2_PROXY_COOKIE_SECURE: false # if HTTPS, set "true"
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:4180
      OAUTH2_PROXY_UPSTREAMS: http://flask-server:5000/
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: true
      #OAUTH2_PROXY_CONFIG: /oauth2-proxy.cfg
      #OAUTH2_PROXY_SKIP_AUTH_ROUTES: "GET=^/probe"
    networks:
      - frontend
      - backend
    volumes:
      - ./oauth2-proxy.cfg:/etc/oauth2-proxy.cfg
    entrypoint: oauth2-proxy --config=/etc/oauth2-proxy.cfg

  flask-server:
    build: flask-server/.
    ports:
      - 5000:5000
    #environment:
    #  - BASE_URL=/flask-server
    networks:
      - backend


networks:
  frontend:
    name: sample-local-nw
    external: true
  backend:
    name: reverse-proxy-nw
